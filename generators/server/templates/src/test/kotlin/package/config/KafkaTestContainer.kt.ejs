package <%= packageName %>.config

import org.springframework.beans.factory.DisposableBean
import org.springframework.beans.factory.InitializingBean
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import org.testcontainers.containers.KafkaContainer
import org.testcontainers.containers.output.Slf4jLogConsumer
import org.testcontainers.utility.DockerImageName

class KafkaTestContainer: InitializingBean, DisposableBean {

    private lateinit var kafkaContainer: KafkaContainer
    private val log = LoggerFactory.getLogger(KafkaTestContainer::class)

    override fun destroy() {
        if (null != kafkaContainer && kafkaContainer.isRunning()) {
            kafkaContainer.stop()
        }
    }

    override fun afterPropertiesSet() {
        if (null == kafkaContainer) {
            kafkaContainer = KafkaContainer(DockerImageName.parse("<%= DOCKER_KAFKA %>"))
                .withLogConsumer(Slf4jLogConsumer(log))
                .withReuse(true)
        }
        if (!kafkaContainer.isRunning()) {
            kafkaContainer.start()
        }
    }

    fun getKafkaContainer() = kafkaContainer
}
